:javascript   
  var data = #{@scopedsearch_a};
  chartid = chance.hash();
  $("##{@bodyidentifier} .panel-body .second").highcharts('StockChart', {
      credits: {
        enabled: false
      },
      chart: {
        type: 'spline',
        zoomType: 'x',
        height: 78,
        events : {
            // load : function () {
            //     // set up the updating of the chart each second
            //     var series = this.series[0];
            //     globalarray.push(series);
            //     intervalArr.push(setInterval(function () {
            //         var chart =  $("#"+ droppableDiv +" .panel-body").highcharts();
            //         var x = (new Date()).getTime();
            //         var y = randomFloatBetween(1.7,1.85,4);
            //         var dissId= 12343;
            //         series.addPoint({x: x, y: y, dissId: dissId}, true, true, false);
            //     }, 10000));
            // }
        },
        animation: false
      },
      scrollbar : {
        enabled : true
      },
      navigator: {
          maskFill: 'rgba(209, 74, 0, 0.5)',
          series: {
              color: 'rgba(209, 74, 0, 0.5)',
              lineColor: "orange"
          }
      },
      rangeSelector: {
          enabled : false
      },
      xAxis: {        
        type: "datetime",
        lineWidth: 0,
        minorGridLineWidth: 0,
        lineColor: 'rgba(0, 0, 0, 0)',
        labels: {
            enabled: false
        },
        minorTickLength: 0,
        tickLength: 0,
          events: {

              afterSetExtremes: function (e) {
                var num_threads = 4;
                var MT = new Multithread(num_threads);
                if( !down ){
                  var chart1 = $("##{@bodyidentifier} .panel-body .second").highcharts();
                  var chart2 = $("##{@bodyidentifier} .panel-body .first").highcharts();
                  var series1 = chart1.series[0];
                  var series2 = chart2.series[0];
                  var max = chart1.xAxis[0].getExtremes().max;
                  console.log("GOT IT "+ series1.data.length + ">> COMPARE >> "+ series2.data.length);
                  console.log("Max: " + max+ " Min: " + chart1.xAxis[0].getExtremes.dataMin);
                  for (i=0; i < series2.data.length;i++){
                    if (series2.data[i].execution_timestamp > max) {
                      console.log("Entering");
                      series2.data[i].remove();
                      console.log("REMOVED");
                    } 
                  }

                }
              }
          }
      },
      yAxis: {
        height: 0,
        gridLineWidth: 0,
        labels: {
            enabled: false
        }
      },
      tooltip: {
          formatter: function() {
                  var s = "";
                  var d = new Date(0);
                  $.each(this.points, function(i, point) {
                    s += 'Dissemination id: ' + point.point.dissId +"<br/>" + 'Common fixed fair rate: ' + point.point.y + "%" + "<br/>" + "Execution timestamp: " + new Date(point.point.a);
             });
             return s;
          }
      },
      series: [{
          data: data
          }]
        });

